//整型数组排序
void Bubble_Sort(int* arr, int sz)
{
	for (int i = 0; i < sz-1; i++)
	{
		for (int j = 0; j < sz - i-1; j++)
		{
			if (*(arr + j) > *(arr + j + 1))
			{
				int temp = *(arr+j);
				*(arr+j) = *(arr+j+1);
				*(arr+j+1) = temp;
			}
		}
	}
}




void Bubble_Sort(int* arr, int sz)
{
	for (int i = 0; i < sz-1; i++)
	{
		for (int j = 0; j < sz - i-1; j++)
		{
			if (arr[i]>arr[i+1])
			{
				int temp = arr[i];
				arr[i] = arr[i+1];
				arr[i+1] = temp;
			}
		}
	}
}

//任意数据类型数组排序
void Swap(char* buf1, char* buf2, int width)
{
	int i = 0;
	for (i = 0; i < width; i++)
	{
		char tmp = *buf1;
		*buf1 = *buf2;
		*buf2 = tmp;
		buf1++;
		buf2++;
	}
}
void Bubble_Sort(void* base, int sz, int width, int (*cmp)(void* e1, void* e2))
{
	int i = 0;
	for (i = 0; i < sz - 1; i++)
	{
		int j = 0;
		for (j = 0; j < sz - i - 1; j++)
		{
			if (cmp((char*)base + j * width, (char*)base + (j + 1) * width) > 0)
			{
				Swap((char*)base + j * width, (char*)base + (j + 1) * width,width);
			}
		}
	}
}
//cmp函数需要自己编写，具体参照qsort函数
